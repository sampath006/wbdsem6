{"ast":null,"code":"var _jsxFileName = \"/Users/sampathkumarreddymanam/Documents/sem6/wbd/project-28-03/grp27/src/components/singlePost/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = () => {\n  _s();\n\n  //fetching the url\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({}); //fetching image from local host\n\n  const PF = \"http://localhost:5000/images/\"; //fetching user from context\n\n  const {\n    user\n  } = useContext(Context); //Declaring set and use states\n\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false); //Fetchs a single post from the backend and sets it to the variable\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]); //Handles the delete functionality\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\"); //Reloads the page\n    } catch (err) {}\n  }; //Handles the update functionality\n\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      window.location.reload(\"/\"); //Reloads the page\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePost\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostWrapper\",\n        children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"singleWrapperImg\",\n          src: PF + post.photo,\n          alt: \"\",\n          className: \"singlePostImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"singlePostTitleInput\",\n          value: title,\n          autoFocus: true,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"singlePostTitle\",\n          children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singlePostEdit\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"singlePostIcon far fa-edit\",\n              onClick: () => setUpdateMode(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"singlePostIcon far fa-trash-alt\",\n              onClick: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostAuthor\",\n            children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/?user=${post.username}`,\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", post.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostDate\",\n            children: new Date(post.createdAt).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"singlePostDescInput\",\n          value: desc,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singlePostDesc\",\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"singlePostButton\",\n          onClick: handleUpdate,\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SinglePost, \"e+pfhbmVNAJGgAXvDxuNkjsCBds=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/sampathkumarreddymanam/Documents/sem6/wbd/project-28-03/grp27/src/components/singlePost/SinglePost.js"],"names":["React","useState","useEffect","useContext","axios","useLocation","Link","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","reload","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import React,{useState,useEffect, useContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useLocation, Link } from \"react-router-dom\";\r\nimport \"./singlePost.css\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nconst SinglePost = () => {\r\n\r\n  //fetching the url\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setPost] = useState({});\r\n\r\n  //fetching image from local host\r\n  const PF = \"http://localhost:5000/images/\"\r\n  //fetching user from context\r\n  const {user} = useContext(Context)\r\n\r\n  //Declaring set and use states\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n\r\n\r\n\r\n  //Fetchs a single post from the backend and sets it to the variable\r\n  useEffect(()=>{\r\n    const getPost = async ()=>{\r\n      const res = await axios.get(\"/posts/\"+path);\r\n      setPost(res.data);\r\n      setTitle(res.data.title);\r\n      setDesc(res.data.desc);\r\n    };\r\n    getPost()\r\n  },[path])\r\n\r\n\r\n  //Handles the delete functionality\r\n  const handleDelete = async ()=>{\r\n    try {\r\n      await axios.delete(`/posts/${post._id}`,{\r\n        data:{username:user.username},\r\n      });\r\n      window.location.replace(\"/\");//Reloads the page\r\n\r\n    } catch (err) {\r\n      \r\n    }\r\n  }\r\n\r\n  //Handles the update functionality\r\n  const handleUpdate = async ()=>{\r\n    try {\r\n      await axios.put(`/posts/${post._id}`,{\r\n        username:user.username, title,desc,\r\n      });\r\n      window.location.reload(\"/\");//Reloads the page\r\n\r\n    } catch (err) {\r\n      \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"singlePost\">\r\n        {/* fetching a single post and displaying in the page */}\r\n        <div className=\"singlePostWrapper\">\r\n          {post.photo && (\r\n            <img className=\"singleWrapperImg\"\r\n            src={PF + post.photo}\r\n            alt=\"\"\r\n            className=\"singlePostImg\"\r\n          />\r\n          )}{\r\n            updateMode ? <input type=\"text\" className=\"singlePostTitleInput\" value={title} autoFocus  onChange={(e)=>setTitle(e.target.value)}/> : (\r\n              <h1 className=\"singlePostTitle\">\r\n            {post.title}\r\n            {/* Only the user who added the blog can edit and delete the blog */}\r\n            {post.username === user?.username && (\r\n              <div className=\"singlePostEdit\">\r\n              <i className=\"singlePostIcon far fa-edit\" onClick={()=>setUpdateMode(true)}></i>\r\n                <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n              </div>\r\n            )}\r\n          </h1>\r\n            )\r\n          }\r\n        {/* fectching and displaying the details like author and created date */}\r\n          <div className=\"singlePostInfo\">\r\n            <span className=\"singlePostAuthor\">\r\n              Author:  \r\n              <Link to={`/?user=${post.username}`} className=\"link\"><b> {post.username} </b></Link>\r\n            </span>\r\n            <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\r\n          </div>\r\n          {/* It can be updated only if it is in updated mode or it it will just show the content */}\r\n          {updateMode ? <textarea className=\"singlePostDescInput\" value={desc} onChange={(e)=>setDesc(e.target.value)}/> : (\r\n            <p className=\"singlePostDesc\">{post.desc}</p>\r\n          ) }\r\n          {/* onclick it handles the update funcion */}\r\n          {updateMode && <button className=\"singlePostButton\" onClick={handleUpdate}> Update </button>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}