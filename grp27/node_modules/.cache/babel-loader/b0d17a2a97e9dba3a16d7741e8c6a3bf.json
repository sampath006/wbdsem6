{"ast":null,"code":"var _jsxFileName = \"/Users/sampathkumarreddymanam/Documents/sem6/wbd/project-28-03/grp27/src/pages/adminpage/AdminPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './adminPage.css';\nimport axios from \"axios\";\nimport Header from '../../components/header/Header';\nimport Events from '../../components/events/Events';\nimport { useLocation, Link } from 'react-router-dom';\nimport NavBar from \"../../components/navbar/NavBar\";\nimport Footer from \"../../components/footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminPage() {\n  _s();\n\n  //declarimg set and use states\n  const [posts, setPosts] = useState([]);\n  const [events, setEvents] = useState([]); //fetching user from the context\n\n  const [users, setUsers] = useState([]); //getting the url location\n\n  const {\n    search\n  } = useLocation();\n  useEffect(() => {\n    //fetching the blog posts\n    const fetchPosts = async () => {\n      const res = await axios.get(\"/posts\" + search);\n      setPosts(res.data);\n    }; //fetching events\n\n\n    const fetchEvents = async () => {\n      const res = await axios.get(\"/events\" + search);\n      setEvents(res.data);\n    }; //fetching the users\n\n\n    const fetchUsers = async () => {\n      const res = await axios.get(\"/users\");\n      setUsers(res.data);\n    };\n\n    fetchPosts();\n    fetchEvents();\n    fetchUsers();\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"adminHeader\",\n        children: \"Admin Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postsAndBlogsCount\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postsCount\",\n          children: [\"Total Posts :\", posts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"eventsCount\",\n          children: [\"Total Events :\", events.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: \"/addEvent\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addEvent\",\n          children: \" Add An Event \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Events, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminPage, \"gn8NDXVmfw8jpk+QGp0jAp1J6es=\", false, function () {\n  return [useLocation];\n});\n\n_c = AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/Users/sampathkumarreddymanam/Documents/sem6/wbd/project-28-03/grp27/src/pages/adminpage/AdminPage.js"],"names":["React","useEffect","useState","axios","Header","Events","useLocation","Link","NavBar","Footer","AdminPage","posts","setPosts","events","setEvents","users","setUsers","search","fetchPosts","res","get","data","fetchEvents","fetchUsers","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAE/B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC,CAJ+B,CAM/B;;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CAP+B,CAS/B;;AACA,QAAM;AAACe,IAAAA;AAAD,MAAWX,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMiB,UAAU,GAAG,YAAU;AACzB,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,WAASH,MAAnB,CAAlB;AACAL,MAAAA,QAAQ,CAACO,GAAG,CAACE,IAAL,CAAR;AACH,KAHD,CAFU,CAMV;;;AACA,UAAMC,WAAW,GAAG,YAAU;AAC1B,YAAMH,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,YAAUH,MAApB,CAAlB;AACAH,MAAAA,SAAS,CAACK,GAAG,CAACE,IAAL,CAAT;AACH,KAHD,CAPU,CAYV;;;AACA,UAAME,UAAU,GAAG,YAAW;AAC1B,YAAMJ,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,QAAV,CAAlB;AACAJ,MAAAA,QAAQ,CAACG,GAAG,CAACE,IAAL,CAAR;AACH,KAHD;;AAIAH,IAAAA,UAAU;AACVI,IAAAA,WAAW;AACXC,IAAAA,UAAU;AACb,GApBQ,EAoBP,CAACN,MAAD,CApBO,CAAT;AAuBA,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGQ;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAG,YAAlB;AAAA,sCAA6CN,KAAK,CAACa,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAG,aAAlB;AAAA,uCAA+CX,MAAM,CAACW,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAOQ,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,EAAE,EAAC,WAA1B;AAAA,+BAAsC;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,cAPR,eASQ,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAIX;AAAlB;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAeA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAfA;AAAA,kBADJ;AAmBH;;GAtDuBH,S;UAUHJ,W;;;KAVGI,S","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './adminPage.css'\r\nimport axios from \"axios\"\r\nimport Header from '../../components/header/Header';\r\nimport Events from '../../components/events/Events';\r\nimport { useLocation,Link } from 'react-router-dom';\r\nimport NavBar from \"../../components/navbar/NavBar\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\nexport default function AdminPage(){\r\n\r\n    //declarimg set and use states\r\n    const [posts, setPosts] = useState([]);\r\n    const [events, setEvents] = useState([]);\r\n\r\n    //fetching user from the context\r\n    const [users, setUsers] = useState([])\r\n\r\n    //getting the url location\r\n    const {search} = useLocation(); \r\n\r\n    useEffect(()=>{\r\n        //fetching the blog posts\r\n        const fetchPosts = async ()=>{\r\n            const res = await axios.get(\"/posts\"+search)\r\n            setPosts(res.data)\r\n        }\r\n        //fetching events\r\n        const fetchEvents = async ()=>{\r\n            const res = await axios.get(\"/events\"+search)\r\n            setEvents(res.data)\r\n        }\r\n\r\n        //fetching the users\r\n        const fetchUsers = async() => {\r\n            const res = await axios.get(\"/users\")\r\n            setUsers(res.data)\r\n        }\r\n        fetchPosts();\r\n        fetchEvents();\r\n        fetchUsers();\r\n    },[search])\r\n   \r\n    \r\n    return(\r\n        <>\r\n        <NavBar/>\r\n        <div className = \"adminPage\">\r\n            <h1 className=\"adminHeader\">Admin Page</h1>\r\n                {/* displayes the total blog posts */}\r\n                <div className=\"postsAndBlogsCount\">\r\n                    <span className = \"postsCount\">Total Posts :{posts.length}</span>\r\n                    <span className = \"eventsCount\">Total Events :{events.length}</span>\r\n                </div>\r\n                <Link className=\"link\" to=\"/addEvent\"><button className=\"addEvent\"> Add An Event </button></Link>\r\n                {/* displays the evenst present */}\r\n                <Events events = {events}/>\r\n\r\n                {/* <h1>hello</h1> */}\r\n        </div>\r\n        <Footer/>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}